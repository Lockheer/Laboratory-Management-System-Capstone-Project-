Create Database LabManagSys

Create Table UserRegistration (

UserID int Primary Key Identity (1,1),
First_Name varchar(255) not null,
Last_Name varchar(255) not null,
Middle_Name nvarchar(60),
Email nvarchar(255) not null,
Gender varchar(60) not null,
ID_number nvarchar(255) not null,
Contact_Number nvarchar (50) not null,
Birthdate nvarchar(50) not null

)

Create Table Roles (

 RoleID int primary key identity(10,1),
 RoleName varchar(100) not null

)

Insert into Roles (RoleName)
VALUES 
    ('Admin'),
    ('Personnel')


--rename to Account
Create Table Accounts (

AccountID int Primary Key Identity (1,1),
Username nvarchar(255) not null,
[Password] nvarchar (60) not null,
UserID int NOT NULL,
RoleID int NOT NULL,
CONSTRAINT FK_UserRegistration_UserID FOREIGN KEY (UserID) 
REFERENCES UserRegistration(UserID),
CONSTRAINT FK_Roles_RoleID FOREIGN KEY (RoleID) 
REFERENCES Roles(RoleID)

)




--Category List--
Create Table Category (

CategoryID int identity (10,1) primary key,
CategoryName nvarchar(50) not null

)

INSERT INTO Category (CategoryName)
VALUES 
('Plasticware'),
('Glassware'),
('Metalware'),
('Heating Equipment'),
('Measuring Instrument'),
('Safety Equipment');



--Apparatus List
Create Table Inventory (

ApparatusID int Identity (1,1) primary key,
[Apparatus Name] varchar(250) not null,
[Model Number] nvarchar(250)not null,
[Date Purchased] nvarchar(250) not null,
Price decimal(18, 2),
Brand varchar(250),
Status varchar(250) not null,	
Quantity bigint not null,
Remarks nvarchar(250),
CategoryID int

CONSTRAINT FK_Inventory_Category FOREIGN KEY(CategoryID)
REFERENCES Category(CategoryID)

)




--Students List
Create Table Students (

studID int not null identity(1,1) primary key,
Student_Name varchar(255) not null,
ID_Number nvarchar(255) not null,
Email_Address nvarchar(255) not null,
Contact_No bigint not null,
Program varchar(100) not null,
Department varchar(100) not null



)



--Transactions Borrow Records and Return Records
Create Table BorrowReturnTransaction (

    transactionID INT IDENTITY(100,1) PRIMARY KEY,
    Student_Name VARCHAR(250) NOT NULL,
    ID_Number NVARCHAR(250) NOT NULL,
    Email_Address VARCHAR(250) NOT NULL,
    Contact_Number BIGINT NOT NULL,
    Program VARCHAR(250) NOT NULL,
    Apparatus_Name VARCHAR(250) NOT NULL,
    Quantity INT NOT NULL DEFAULT 1,
    Purpose NVARCHAR(120) NOT NULL,
    Borrow_Date NVARCHAR(250) NOT NULL,
    Due_Date NVARCHAR(250) NOT NULL,
    Quantity_Returned INT NULL,
    Date_Returned NVARCHAR(250) NULL,
    Remarks NVARCHAR(250) NULL,
    studID INT NOT NULL,
    AccountID INT NOT NULL,
    ApparatusID INT NOT NULL
CONSTRAINT FK_BorrowReturnTransactions_Student  FOREIGN KEY (studID) REFERENCES Students(studID),
CONSTRAINT FK_BorrowReturnTransactions_Account  FOREIGN KEY (AccountID) REFERENCES Accounts(AccountID),
CONSTRAINT FK_BorrowReturnTransactions_ApparatusList FOREIGN KEY (ApparatusID) REFERENCES ApparatusList(ApparatusID)
);	




--Penalties and Violations
Create Table LaboratoryPenalties (

[PenaltyID] int primary key identity(100,1),
[ID Number] nvarchar(250) not null,
[Student Name] varchar(250) not null,
[Contact Number] bigint not null,
[Email Address] nvarchar(250) not null,
[Penalty Issued Date] nvarchar(50) not null,
[Violation] varchar(250) not null,
[Penalty Condition] varchar(250) not null,
[Amount to be Paid] decimal(18, 2), 
[Amount Received] decimal(18, 2), 
[Penalty Status] varchar(250) not null,
[Balance] decimal (18,2),

--Referencial Foreign Key--
[transactionID] int not null,
CONSTRAINT FK_TransactionReferenceNumber_LabTransaction Foreign Key ([transactionID])
References BorrowReturnTransaction (transactionID)




)


--Emails
CREATE TABLE PenaltyEmails (


[Email_ID] int PRIMARY KEY IDENTITY(100,1),
[Sender] nvarchar(250) NOT NULL,
[Recipient] nvarchar(250) NOT NULL,
[Subject] nvarchar(200) NOT NULL,
[Mail_Description] nvarchar(255) NOT NULL,
[penaltyID] int NOT NULL,
CONSTRAINT FK_Violation_Email FOREIGN KEY (penaltyID) REFERENCES LaboratoryPenalties(penaltyID)


);
GO