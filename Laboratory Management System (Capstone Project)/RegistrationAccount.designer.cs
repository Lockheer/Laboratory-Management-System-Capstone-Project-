#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laboratory_Management_System__Capstone_Project_
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LabManagSys")]
	public partial class RegistrationAccountDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdminAccount(AdminAccount instance);
    partial void UpdateAdminAccount(AdminAccount instance);
    partial void DeleteAdminAccount(AdminAccount instance);
    partial void InsertAdminRegister(AdminRegister instance);
    partial void UpdateAdminRegister(AdminRegister instance);
    partial void DeleteAdminRegister(AdminRegister instance);
    #endregion
		
		public RegistrationAccountDataContext() : 
				base(global::Laboratory_Management_System__Capstone_Project_.Properties.Settings.Default.LabManagSysConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RegistrationAccountDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RegistrationAccountDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RegistrationAccountDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RegistrationAccountDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminAccount> AdminAccounts
		{
			get
			{
				return this.GetTable<AdminAccount>();
			}
		}
		
		public System.Data.Linq.Table<AdminRegister> AdminRegisters
		{
			get
			{
				return this.GetTable<AdminRegister>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_REGISTER")]
		public ISingleResult<SP_REGISTERResult> SP_REGISTER([global::System.Data.Linq.Mapping.ParameterAttribute(Name="First_Name", DbType="VarChar(255)")] string first_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Last_Name", DbType="VarChar(255)")] string last_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Middle_Name", DbType="NVarChar(60)")] string middle_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(255)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="VarChar(60)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_number", DbType="NVarChar(255)")] string iD_number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contact_number", DbType="NVarChar(50)")] string contact_number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Birthdate", DbType="NVarChar(30)")] string birthdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(255)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(60)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), first_Name, last_Name, middle_Name, email, gender, iD_number, contact_number, birthdate, username, password);
			return ((ISingleResult<SP_REGISTERResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminAccount")]
	public partial class AdminAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _AdminID;
		
		private EntityRef<AdminRegister> _AdminRegister;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    #endregion
		
		public AdminAccount()
		{
			this._AdminRegister = default(EntityRef<AdminRegister>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
		public System.Nullable<int> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._AdminRegister.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminRegister_AdminAccount", Storage="_AdminRegister", ThisKey="AdminID", OtherKey="AdminID", IsForeignKey=true)]
		public AdminRegister AdminRegister
		{
			get
			{
				return this._AdminRegister.Entity;
			}
			set
			{
				AdminRegister previousValue = this._AdminRegister.Entity;
				if (((previousValue != value) 
							|| (this._AdminRegister.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdminRegister.Entity = null;
						previousValue.AdminAccounts.Remove(this);
					}
					this._AdminRegister.Entity = value;
					if ((value != null))
					{
						value.AdminAccounts.Add(this);
						this._AdminID = value.AdminID;
					}
					else
					{
						this._AdminID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AdminRegister");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminRegister")]
	public partial class AdminRegister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Middle_Name;
		
		private string _Email;
		
		private string _Gender;
		
		private string _ID_number;
		
		private string _Contact_Number;
		
		private string _Birthdate;
		
		private EntitySet<AdminAccount> _AdminAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnID_numberChanging(string value);
    partial void OnID_numberChanged();
    partial void OnContact_NumberChanging(string value);
    partial void OnContact_NumberChanged();
    partial void OnBirthdateChanging(string value);
    partial void OnBirthdateChanged();
    #endregion
		
		public AdminRegister()
		{
			this._AdminAccounts = new EntitySet<AdminAccount>(new Action<AdminAccount>(this.attach_AdminAccounts), new Action<AdminAccount>(this.detach_AdminAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(60)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_number", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ID_number
		{
			get
			{
				return this._ID_number;
			}
			set
			{
				if ((this._ID_number != value))
				{
					this.OnID_numberChanging(value);
					this.SendPropertyChanging();
					this._ID_number = value;
					this.SendPropertyChanged("ID_number");
					this.OnID_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Number", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contact_Number
		{
			get
			{
				return this._Contact_Number;
			}
			set
			{
				if ((this._Contact_Number != value))
				{
					this.OnContact_NumberChanging(value);
					this.SendPropertyChanging();
					this._Contact_Number = value;
					this.SendPropertyChanged("Contact_Number");
					this.OnContact_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdminRegister_AdminAccount", Storage="_AdminAccounts", ThisKey="AdminID", OtherKey="AdminID")]
		public EntitySet<AdminAccount> AdminAccounts
		{
			get
			{
				return this._AdminAccounts;
			}
			set
			{
				this._AdminAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminAccounts(AdminAccount entity)
		{
			this.SendPropertyChanging();
			entity.AdminRegister = this;
		}
		
		private void detach_AdminAccounts(AdminAccount entity)
		{
			this.SendPropertyChanging();
			entity.AdminRegister = null;
		}
	}
	
	public partial class SP_REGISTERResult
	{
		
		private System.Nullable<int> _Column1;
		
		public SP_REGISTERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
